#!/bin/sh
# Only work with 1 file
# If that file has a "directory" property it splits each topline headline into its own file in a directory.

file=$1
emacs "$file" -batch -load ~/.emacs.d/init.el \
    --eval "(progn (org-md-export-to-markdown)(org-latex-export-to-latex))" -nw --kill
filename=$(basename -- "$file")
filename="${filename%.*}"
mdfile="$filename.md"
mdxfile="$filename.mdx"
#Generates table of contents.
toc=$(cat "$mdfile" | grep -E "^#{1,5} " | sed -E 's/(#+) (.+)/\1~\2~\2/g' | awk -F "~" '{ gsub(/#/,"  ",$1); gsub(/[ ]/,"-",$3); print $1 "- [" $2 "](#" tolower($3) ")" }' | sed 's/(\(.*\):\(.*\))/(\1\2)/g')
echo "---" > "$mdxfile"
awk -v RS='(\r?\n){2,}' '{print; exit}' "$file" | sed 's/#+//g' >> "$mdxfile"
echo "---" >> "$mdxfile"
toc_clean="${toc//$'\n'/\\n}"
cat "$filename.md" >> "$mdxfile"
sed -i "s/.*Hope You are Blessed!/$toc_clean/" "$mdxfile"
pandoc --template eisvogel.latex -i "$filename.tex" -o "assets/$filename.pdf"
result=${PWD##*/}          # to assign to a variable
# This will be used when we have multip post files eventually
#mkdir -p "/home/joshu/projects/joshministers-blog/data/blog/$currentdir"
cp "$mdxfile" "output/"
rm "$filename.md" "$filename.tex"

# I got the TOC one liner from here: https://medium.com/@acrodriguez/one-liner-to-generate-a-markdown-toc-f5292112fd14
